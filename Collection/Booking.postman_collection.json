{
	"info": {
		"_postman_id": "121df044-7b26-4a78-b510-c1ed873c40fe",
		"name": "Booking",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22460689",
		"_collection_link": "https://speeding-moon-820279.postman.co/workspace/Minhazur-Rahman~e4315c7c-3316-4cd6-8519-3ab71d1c8b2f/collection/22460689-121df044-7b26-4a78-b510-c1ed873c40fe?action=share&source=collection_link&creator=22460689"
	},
	"item": [
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"id\", jsonData.bookingid)\r",
							"\r",
							"var responseCode = pm.response.code\r",
							"\r",
							"if(responseCode == 200){\r",
							"    pm.test(\"Booking Data Created Successfully\", function(){\r",
							"        pm.response.to.have.status(200);\r",
							"    })\r",
							"} else {\r",
							"    pm.test(\"Something went wrong. Please check again\")\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"//console.log(firstName)\r",
							"pm.environment.set(\"firstName\", firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"//console.log(lastName)\r",
							"pm.environment.set(\"lastName\", lastName)\r",
							"\r",
							"var totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"pm.environment.set(\"totalPrice\", totalPrice)\r",
							"\r",
							"var depositPaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"depositPaid\", depositPaid)\r",
							"\r",
							"//Date\r",
							"const date = require('moment')\r",
							"const today = date()\r",
							"\r",
							"// var checkinPast = today.subtract(7, 'd').format(\"YYYY-MM-DD\")\r",
							"var checkin = today.add(2, 'd').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkin\", checkin)\r",
							"\r",
							"var checkout = today.add(4, 'd').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkout\", checkout)\r",
							"\r",
							"var additionalNeeds = pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"pm.environment.set(\"additionalNeeds\", additionalNeeds)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalPrice}},\r\n\t\"depositpaid\" : {{depositPaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalNeeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/booking/",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseCode = pm.response.code\r",
							"\r",
							"console.log(responseCode)\r",
							"\r",
							"if(responseCode==200){\r",
							"        var jsonData = pm.response.json()\r",
							"\r",
							"        pm.test(\"First Name Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"firstName\")).to.eql(jsonData.firstname)\r",
							"        })\r",
							"\r",
							"        pm.test(\"Last Name Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"lastName\")).to.eql(jsonData.lastname)\r",
							"        })\r",
							"\r",
							"        pm.test(\"Total Price Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"totalPrice\")).to.eql(jsonData.totalprice.toString())\r",
							"        })\r",
							"\r",
							"        pm.test(\"Deposit Paid Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"depositPaid\")).to.eql(jsonData.depositpaid.toString())\r",
							"        })\r",
							"\r",
							"        pm.test(\"Check-In Date Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"checkin\")).to.eql(jsonData.bookingdates.checkin)\r",
							"        })\r",
							"\r",
							"        pm.test(\"Check-Out Date Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"checkout\")).to.eql(jsonData.bookingdates.checkout)\r",
							"        })\r",
							"\r",
							"        pm.test(\"Status code is 200\", function () {\r",
							"            pm.response.to.have.status(200);\r",
							"        });\r",
							"\r",
							"        pm.test(\"Additional Needs Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"additionalNeeds\")).to.eql(jsonData.additionalneeds)\r",
							"        })\r",
							"}else if(responseCode==404){\r",
							"    pm.test(\"Not Found\")\r",
							"}else if(responseCode==500){\r",
							"    pm.test(\"Server Error\")\r",
							"}else{\r",
							"    pm.test(\"Something went wrong. Please check it\")\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/booking/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Access Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"token\", jsonData.token)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/auth",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\", firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\", lastName)\r",
							"\r",
							"var totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"pm.environment.set(\"totalPrice\", totalPrice)\r",
							"\r",
							"var depositPaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"depositPaid\", depositPaid)\r",
							"\r",
							"// Date\r",
							"const date = require('moment')\r",
							"const today = date()\r",
							"\r",
							"// var checkinPast = today.subtract(7, 'd').format(\"YYYY-MM-DD\")\r",
							"var checkin = today.add(2, 'd').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkin\", checkin)\r",
							"\r",
							"var checkout = today.add(4, 'd').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkout\", checkout)\r",
							"\r",
							"var additionalNeeds = pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"pm.environment.set(\"additionalNeeds\", additionalNeeds)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseCode = pm.response.code\r",
							"\r",
							"if(responseCode == 200){\r",
							"    pm.test(\"Booking Data Updated Successfully\", function(){\r",
							"        pm.response.to.have.status(200);\r",
							"    })\r",
							"} else {\r",
							"    pm.test(\"Something went wrong. Please check again\")\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalPrice}},\r\n\t\"depositpaid\" : {{depositPaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalNeeds}}\"\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/booking/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Updated Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseCode = pm.response.code\r",
							"\r",
							"console.log(responseCode)\r",
							"\r",
							"if(responseCode==200){\r",
							"        var jsonData = pm.response.json()\r",
							"\r",
							"        pm.test(\"First Name Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"firstName\")).to.eql(jsonData.firstname)\r",
							"        })\r",
							"\r",
							"        pm.test(\"Last Name Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"lastName\")).to.eql(jsonData.lastname)\r",
							"        })\r",
							"\r",
							"        pm.test(\"Total Price Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"totalPrice\")).to.eql(jsonData.totalprice.toString())\r",
							"        })\r",
							"\r",
							"        pm.test(\"Deposit Paid Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"depositPaid\")).to.eql(jsonData.depositpaid.toString())\r",
							"        })\r",
							"\r",
							"        pm.test(\"Check-In Date Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"checkin\")).to.eql(jsonData.bookingdates.checkin)\r",
							"        })\r",
							"\r",
							"        pm.test(\"Check-Out Date Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"checkout\")).to.eql(jsonData.bookingdates.checkout)\r",
							"        })\r",
							"\r",
							"        pm.test(\"Status code is 200\", function () {\r",
							"            pm.response.to.have.status(200);\r",
							"        });\r",
							"\r",
							"        pm.test(\"Additional Needs Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"additionalNeeds\")).to.eql(jsonData.additionalneeds)\r",
							"        })\r",
							"}\r",
							"else if(responseCode==404)\r",
							"{\r",
							"    pm.test(\"Not Found\")\r",
							"}\r",
							"else if(responseCode==500)\r",
							"{\r",
							"    pm.test(\"Internal Server Error\")\r",
							"}\r",
							"else\r",
							"{\r",
							"    pm.test(\"Something went wrong. Please check it\")\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/booking/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Partial Update Booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var partialUpdatedFirstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"var partialUpdatedLastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"var partialUpdatedTotalPrice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"var partialUpdatedDepositPaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"var partialUpdatedAdditionalNeeds = pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"\r",
							"// Date\r",
							"const date = require('moment')\r",
							"const today = date()\r",
							"\r",
							"var partialUpdatedCheckIn = today.add(2, 'd').format(\"YYYY-MM-DD\")\r",
							"var partialUpdatedCheckOut = today.add(4, 'd').format(\"YYYY-MM-DD\")\r",
							"\r",
							"pm.environment.set(\"partialUpdatedAdditionalNeeds\", partialUpdatedAdditionalNeeds)\r",
							"pm.environment.set(\"partialUpdatedTotalPrice\", partialUpdatedTotalPrice)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseCode = pm.response.code\r",
							"\r",
							"if(responseCode == 200){\r",
							"    pm.test(\"Booking Data Partial Updated Successfully\", function(){\r",
							"        pm.response.to.have.status(200);\r",
							"    })\r",
							"} else {\r",
							"    pm.test(\"Something went wrong. Please check again\")\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\r\n\t\"totalprice\" : {{partialUpdatedTotalPrice}},\r\n\t\"additionalneeds\" : \"{{partialUpdatedAdditionalNeeds}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/booking/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Partial Updated Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseCode = pm.response.code\r",
							"\r",
							"console.log(responseCode)\r",
							"\r",
							"if(responseCode==200){\r",
							"        var jsonData = pm.response.json()\r",
							"\r",
							"        pm.test(\"First Name Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"firstName\")).to.eql(jsonData.firstname)\r",
							"        })\r",
							"\r",
							"        pm.test(\"Last Name Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"lastName\")).to.eql(jsonData.lastname)\r",
							"        })\r",
							"\r",
							"        pm.test(\"Total Price Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"partialUpdatedTotalPrice\")).to.eql(jsonData.totalprice.toString())\r",
							"        })\r",
							"\r",
							"        pm.test(\"Deposit Paid Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"depositPaid\")).to.eql(jsonData.depositpaid.toString())\r",
							"        })\r",
							"\r",
							"        pm.test(\"Check-In Date Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"checkin\")).to.eql(jsonData.bookingdates.checkin)\r",
							"        })\r",
							"\r",
							"        pm.test(\"Check-Out Date Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"checkout\")).to.eql(jsonData.bookingdates.checkout)\r",
							"        })\r",
							"\r",
							"        pm.test(\"Status code is 200\", function () {\r",
							"            pm.response.to.have.status(200);\r",
							"        });\r",
							"\r",
							"        pm.test(\"Additional Needs Validation\", function(){\r",
							"            pm.expect(pm.environment.get(\"partialUpdatedAdditionalNeeds\")).to.eql(jsonData.additionalneeds)\r",
							"        })\r",
							"}else if(responseCode==404){\r",
							"    pm.test(\"Not Found\")\r",
							"}else if(responseCode==500){\r",
							"    pm.test(\"Server Error\")\r",
							"}else{\r",
							"    pm.test(\"Something went wrong. Please check it\")\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/booking/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Booking",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}/booking/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Deleted Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseCode = pm.response.code\r",
							"\r",
							"console.log(responseCode)\r",
							"\r",
							"if(responseCode==200){\r",
							"\r",
							"}\r",
							"else if(responseCode==404)\r",
							"{\r",
							"    pm.test(\"Deleted Successfully\")\r",
							"}\r",
							"else if(responseCode==500)\r",
							"{\r",
							"    pm.test(\"Internal Server Error\")\r",
							"}\r",
							"else\r",
							"{\r",
							"    pm.test(\"Something went wrong. Please check it\")\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/booking/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}